{"version":3,"sources":["forms/ÙŒRoleForm.jsx","pages/Role.jsx","context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/selectors.js","redux/crud/actions.js","context/erp/types.jsx","context/erp/reducer.jsx","context/erp/actions.jsx","context/erp/selectors.jsx","context/erp/index.jsx","utils/helpers.js","components/Loading/index.jsx","request/request.js","layout/DefaultLayout/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/ErpContextLayout/index.jsx","layout/ErpLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx"],"names":["RoleForm","isUpdateForm","Item","name","label","rules","required","message","Role","config","entity","PANEL_TITLE","dataTableTitle","ENTITY_NAME","CREATE_ENTITY","ADD_NEW_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","title","dataIndex","dataTableColumns","searchConfig","displayLabels","searchFields","outputValue","entityDisplayLabels","CrudModule","createForm","updateForm","OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelClose","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","selectCrud","crud","selectCurrentItem","createSelector","current","selectListItems","list","selectItemById","itemId","result","items","find","item","_id","selectCreatedItem","create","selectUpdatedItem","update","selectDeletedItem","read","delete","selectSearchedItems","search","resetState","a","resetAction","actionType","keyState","payload","currentItem","data","currentAction","options","page","request","success","pagination","parseInt","pageSize","showSizeChanger","total","count","jsonData","id","isOpen","recordPayment","deleteModal","dataTableList","last","readPanel","updatePanel","createPanel","recordPanel","ErpContext","ErpContextProvider","useErpContext","erpContextAction","erpContextSelector","valueByString","obj","string","devider","split","map","key","reduce","o","x","get","join","Object","byString","s","replace","i","n","length","k","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","axios","defaults","baseURL","API_BASE_URL","withCredentials","post","response","successHandler","notifyOnSuccess","notifyOnFailed","errorHandler","patch","filter","equal","query","slice","source","CancelToken","DefaultLayout","CollapseBoxButton","onChange","className","onClick","TopCollapseBox","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","Sider","Layout","SidePanel","fixHeaderPanel","useState","isSidePanelClose","setSidePanel","leftSider","setLeftSider","opacitySider","setOpacitySider","paddingTopSider","setPaddingTopSider","useAppContext","stateApp","appContextAction","isNavMenuClose","navMenu","useEffect","timer","setTimeout","clearTimeout","trigger","MenuOutlined","width","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","paddingTop","Content","ContentBox","stateCrud","padding","margin","maxWidth","flex","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","ErpContextLayout","ErpLayout","DashboardLayout","CreateForm","formElements","useDispatch","useSelector","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","htmlType","UpdateForm","newValues","birthday","dayjs","date","expiredDate","created","updated","setFieldsValue","paddingRight","paddingLeft","DeleteModal","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","propsTitle","isDate","format","push","itemsList","gutter","SearchItemComponent","onRerender","selectOptions","setOptions","currentValue","setCurrentValue","isSearching","searching","setSearching","valToSearch","setValToSearch","debouncedValue","setDebouncedValue","useDebounce","cancel","optionField","q","fields","loading","showSearch","allowClear","placeholder","float","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","onSearch","searchText","onSelect","Option","SearchItem","setState","comp","DataTable","DropDownRowMenu","AddNewItem","render","row","overlay","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","history","back","ghost","extra","uniqueId","columns","rowKey","dataSource","icon","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","setLabels","currentlabels","marginBottom","size","marginLeft","FixHeaderPanel","block","PlusOutlined","useLayoutEffect"],"mappings":"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","file":"static/js/Role.3d7d0201.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Select } from 'antd';\n\nexport default function RoleForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        name=\"codeName\"\n        label=\"codeName\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your codeName!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"displayName\"\n        label=\"displayName\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your displayName!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"dashboardType\"\n        label=\"dashboardType\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your dashboardType!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\n\nimport CrudModule from '@/modules/CrudModule';\nimport RoleForm from '@/forms/ÙŒRoleForm';\n\nexport default function Role() {\n  const entity = 'role';\n  const searchConfig = {\n    displayLabels: ['displayName'],\n    searchFields: 'codeName,displayName',\n    outputValue: '_id',\n  };\n\n  const PANEL_TITLE = 'Role Panel';\n  const dataTableTitle = 'Role Lists';\n  const entityDisplayLabels = ['displayName'];\n\n  const readColumns = [\n    { title: 'codeName', dataIndex: 'codeName' },\n    { title: 'displayName', dataIndex: 'displayName' },\n    { title: 'dashboardType', dataIndex: 'dashboardType' },\n  ];\n\n  const dataTableColumns = [\n    { title: 'codeName', dataIndex: 'codeName' },\n    { title: 'displayName', dataIndex: 'displayName' },\n    { title: 'dashboardType', dataIndex: 'dashboardType' },\n  ];\n  const ADD_NEW_ENTITY = 'Add new Role';\n  const DATATABLE_TITLE = 'Roles List';\n  const ENTITY_NAME = 'Role';\n  const CREATE_ENTITY = 'Create Role';\n  const UPDATE_ENTITY = 'Update Role';\n\n  const config = {\n    entity,\n    PANEL_TITLE,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudModule\n      createForm={<RoleForm />}\n      updateForm={<RoleForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_ADVANCED_BOX = 'OPEN_ADVANCED_BOX';\nexport const CLOSE_ADVANCED_BOX = 'CLOSE_ADVANCED_BOX';\n\nexport const OPEN_EDIT_BOX = 'OPEN_EDIT_BOX';\nexport const CLOSE_EDIT_BOX = 'CLOSE_EDIT_BOX';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n\nexport const OPEN_BOX = 'OPEN_BOX';\nexport const CLOSE_BOX = 'CLOSE_BOX';\nexport const COLLAPSE_BOX = 'COLLAPSE_BOX';\n\nexport const OPEN_READ_BOX = 'OPEN_READ_BOX';\nexport const CLOSE_READ_BOX = 'CLOSE_READ_BOX';\nexport const COLLAPSE_READ_BOX = 'COLLAPSE_READ_BOX';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelClose: true,\n  isBoxCollapsed: false,\n  isReadBoxOpen: false,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelClose: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: !state.isPanelClose,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log('readBox open');\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log('readBox close');\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error('useCrudContext must be used within a CrudContextProvider');\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import { createSelector } from 'reselect';\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector([selectCrud], (crud) => crud.current);\n\nexport const selectListItems = createSelector([selectCrud], (crud) => crud.list);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) => list.result.items.find((item) => item._id === itemId));\n\nexport const selectCreatedItem = createSelector([selectCrud], (crud) => crud.create);\n\nexport const selectUpdatedItem = createSelector([selectCrud], (crud) => crud.update);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector([selectCrud], (crud) => crud.delete);\n\nexport const selectSearchedItems = createSelector([selectCrud], (crud) => crud.search);\n","import * as actionTypes from './types';\nimport { request } from '@/request';\n\nexport const crud = {\n  resetState:\n    (props = {}) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.RESET_STATE,\n      });\n    },\n  resetAction:\n    ({ actionType }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.RESET_ACTION,\n        keyState: actionType,\n        payload: null,\n      });\n    },\n  currentItem:\n    ({ data }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: { ...data },\n      });\n    },\n  currentAction:\n    ({ actionType, data }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.CURRENT_ACTION,\n        keyState: actionType,\n        payload: { ...data },\n      });\n    },\n  list:\n    ({ entity, options = { page: 1 } }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'list',\n        payload: null,\n      });\n\n      let data = await request.list({ entity, options });\n\n      if (data.success === true) {\n        const result = {\n          items: data.result,\n          pagination: {\n            current: parseInt(data.pagination.page, 10),\n            pageSize: 10,\n            showSizeChanger: false,\n            total: parseInt(data.pagination.count, 10),\n          },\n        };\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'list',\n          payload: result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'list',\n          payload: null,\n        });\n      }\n    },\n  create:\n    ({ entity, jsonData }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'create',\n        payload: null,\n      });\n\n      let data = await request.create({ entity, jsonData });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'create',\n          payload: data.result,\n        });\n\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'create',\n          payload: null,\n        });\n      }\n    },\n  read:\n    ({ entity, id }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'read',\n        payload: null,\n      });\n\n      let data = await request.read({ entity, id });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'read',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'read',\n          payload: null,\n        });\n      }\n    },\n  update:\n    ({ entity, id, jsonData }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'update',\n        payload: null,\n      });\n\n      let data = await request.update({ entity, id, jsonData });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'update',\n          payload: data.result,\n        });\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'update',\n          payload: null,\n        });\n      }\n    },\n\n  delete:\n    ({ entity, id }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'delete',\n        payload: null,\n      });\n\n      let data = await request.delete({ entity, id });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'delete',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'delete',\n          payload: null,\n        });\n      }\n    },\n\n  search:\n    ({ entity, options = {} }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'search',\n        payload: null,\n      });\n\n      let data = await request.search({ entity, options });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'search',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'search',\n          payload: null,\n        });\n      }\n    },\n};\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  recordPayment: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  dataTableList: {\n    isOpen: true,\n  },\n  last: null,\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        dataTableList: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'read' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'update' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'create' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    recordPanel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL,\n          keyState: 'recordPayment',\n        });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error('useErpContext must be used within a ErpContextProvider');\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import { parse } from 'querystring';\nimport dayjs from 'dayjs';\nfunction getPageQuery() {\n  parse(window.location.href.split('?')[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split('.').reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  s = s.replace(/^\\./, ''); // strip a leading dot\n  let a = s.split('.');\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split('.').every(function (x) {\n    if (typeof obj !== 'object' || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = '|';\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(' ');\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll('input, select, textarea');\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== 'true') {\n      if (element.type === 'file') {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\nexport const isDate = function ({ date, format = 'YYYY-MM-DD' }) {\n  if (typeof date == 'boolean') return false;\n  if (typeof date == 'number') return false;\n  if (dayjs(date, format).isValid()) return true;\n  return false;\n};\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + ' ' + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll('[data-property]').forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case 'date':\n        value = formatDate(value);\n        break;\n\n      case 'datetime':\n        value = formatDatetime(value);\n        break;\n\n      case 'currency':\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import axios from 'axios';\nimport { API_BASE_URL } from '@/config/serverApiConfig';\n\nimport errorHandler from './errorHandler';\nimport successHandler from './successHandler';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nconst request = {\n  create: async ({ entity, jsonData }) => {\n    console.log('ðŸš€ Create Request ðŸš€ ~ file: request.js ~ line 19 ~ create: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.post(entity + '/create', jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async ({ entity, id }) => {\n    try {\n      const response = await axios.get(entity + '/read/' + id);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async ({ entity, id, jsonData }) => {\n    console.log('ðŸš€ ~ file: request.js ~ line 34 ~ update: ~ id', id);\n    console.log('ðŸš€ Update Request ðŸš€ ~ file: request.js ~ line 42 ~ update: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.patch(entity + '/update/' + id, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async ({ entity, id, options = {} }) => {\n    try {\n      const response = await axios.delete(entity + '/delete/' + id);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async ({ entity, options = {} }) => {\n    try {\n      let filter = options.filter ? 'filter=' + options.filter : '';\n      let equal = options.equal ? '&equal=' + options.equal : '';\n      let query = `?${filter}${equal}`;\n\n      const response = await axios.get(entity + '/filter' + query);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n      // headersInstance.cancelToken = source.token;\n      const response = await axios.get(entity + '/search' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n\n      const response = await axios.get(entity + '/list' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async ({ entity, jsonData, options = {} }) => {\n    try {\n      const response = await axios.post(entity, jsonData);\n\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async ({ entity }) => {\n    try {\n      const response = await axios.get(entity);\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async ({ entity, jsonData }) => {\n    try {\n      const response = await axios.patch(entity, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  source: () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import React from 'react';\n\nimport { CrudContextProvider } from '@/context/crud';\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'none', opacity: 0 } : { display: 'block', opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n}) {\n  const collapsed = isCollapsed ? 'collapsed' : '';\n  return (\n    <div className=\"panelBox\">\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={'collapseBox ' + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>{bottomContent}</BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\nimport { Layout } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport CollapseBox from '../CollapseBox';\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({ config, topContent, bottomContent, fixHeaderPanel }) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelClose, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n  const [leftSider, setLeftSider] = useState('-1px');\n  const [opacitySider, setOpacitySider] = useState(0);\n  const [paddingTopSider, setPaddingTopSider] = useState('20px');\n\n  const { state: stateApp, appContextAction } = useAppContext();\n  const { isNavMenuClose } = stateApp;\n  const { navMenu } = appContextAction;\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      setOpacitySider(0);\n      setPaddingTopSider('20px');\n\n      timer = setTimeout(() => {\n        setLeftSider('-1px');\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n      setLeftSider(0);\n      timer = setTimeout(() => {\n        setOpacitySider(1);\n        setPaddingTopSider(0);\n      }, 200);\n      if (!isNavMenuClose) {\n        navMenu.close();\n      }\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isSidePanelClose}\n      collapsedWidth={'0px'}\n      onCollapse={collapsePanel}\n      className=\"sidePanel\"\n      zeroWidthTriggerStyle={{\n        right: '-50px',\n        top: '15px',\n      }}\n      style={{\n        left: leftSider,\n      }}\n    >\n      <div\n        className=\"sidePanelContent\"\n        style={{\n          opacity: opacitySider,\n          paddingTop: paddingTopSider,\n        }}\n      >\n        {fixHeaderPanel}\n        <CollapseBox\n          buttonTitle={ADD_NEW_ENTITY}\n          isCollapsed={isBoxCollapsed}\n          onCollapse={collapsePanelBox}\n          topContent={topContent}\n          bottomContent={bottomContent}\n        ></CollapseBox>\n      </div>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport DefaultLayout from '../DefaultLayout';\n\nimport SidePanel from '@/components/SidePanel';\nimport { Layout } from 'antd';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\n\nconst { Content } = Layout;\n\nconst ContentBox = ({ children }) => {\n  const { state: stateCrud, crudContextAction } = useCrudContext();\n  const { state: stateApp } = useAppContext();\n  const { isPanelClose } = stateCrud;\n  const { isNavMenuClose } = stateApp;\n  const { panel } = crudContextAction;\n\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      timer = setTimeout(() => {\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  useEffect(() => {\n    if (!isNavMenuClose) {\n      panel.close();\n    }\n  }, [isNavMenuClose]);\n  return (\n    <Content\n      className=\"whiteBox shadow\"\n      style={{\n        padding: '50px 40px',\n        margin: '100px auto',\n        width: isSidePanelClose ? '100%' : '830px',\n        maxWidth: '1000px',\n        flex: 'none',\n      }}\n    >\n      {children}\n    </Content>\n  );\n};\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <>\n      <DefaultLayout>\n        <Layout style={{ minHeight: '100vh' }}>\n          <SidePanel\n            config={config}\n            topContent={sidePanelTopContent}\n            bottomContent={sidePanelBottomContent}\n            fixHeaderPanel={fixHeaderPanel}\n          ></SidePanel>\n          <Layout>\n            <ContentBox> {children}</ContentBox>\n          </Layout>\n        </Layout>\n      </DefaultLayout>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { ErpContextProvider } from '@/context/erp';\n\nfunction ErpContextLayout({ children }) {\n  return <ErpContextProvider>{children}</ErpContextProvider>;\n}\n\nexport default ErpContextLayout;\n","import React from 'react';\n\nimport ErpContextLayout from '../ErpContextLayout';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function ErpLayout({ children, config }) {\n  return (\n    <ErpContextLayout>\n      <Layout className=\"site-layout\">\n        <Content\n          className=\"whiteBox shadow\"\n          style={{\n            padding: '50px 40px',\n            margin: '100px auto',\n            width: '100%',\n            maxWidth: '1100px',\n          }}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </ErpContextLayout>\n  );\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <Content\n        style={{\n          padding: '30px 40px',\n          margin: '70px auto',\n          width: '100%',\n          maxWidth: '1100px',\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCreatedItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    console.log('ðŸš€ ~ file: index.jsx ~ line 19 ~ onSubmit ~ fieldsValue', fieldsValue);\n\n    dispatch(crud.create({ entity, jsonData: fieldsValue }));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'create' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectUpdatedItem } from '@/redux/crud/selectors';\n\nimport { isDate } from '@/utils/helpers';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n\n  /////\n\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const showCurrentRecord = () => {\n    readBox.open();\n  };\n\n  /////\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    console.log('ðŸš€ ~ file: index.jsx ~ line 34 ~ onSubmit ~  current._id', current._id);\n    const id = current._id;\n    dispatch(crud.update({ entity, id, jsonData: fieldsValue }));\n  };\n  useEffect(() => {\n    if (current) {\n      let newValues = { ...current };\n      if (newValues.birthday) {\n        newValues = {\n          ...newValues,\n          birthday: dayjs(newValues['birthday']),\n        };\n      }\n      if (newValues.date) {\n        newValues = {\n          ...newValues,\n          date: dayjs(newValues['date']),\n        };\n      }\n      if (newValues.expiredDate) {\n        newValues = {\n          ...newValues,\n          expiredDate: dayjs(newValues['expiredDate']),\n        };\n      }\n      if (newValues.created) {\n        newValues = {\n          ...newValues,\n          created: dayjs(newValues['created']),\n        };\n      }\n      if (newValues.updated) {\n        newValues = {\n          ...newValues,\n          updated: dayjs(newValues['updated']),\n        };\n      }\n\n      console.log('ðŸš€ ~ file: index.jsx ~ line 40 ~ useEffect ~ obj', newValues);\n      form.setFieldsValue(newValues);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'update' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingRight: '5px',\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingLeft: '5px',\n            }}\n          >\n            <Button onClick={showCurrentRecord}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectDeletedItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = 'Do you want delete : ',\n    modalTitle = 'Remove Item',\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState('');\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list({ entity }));\n      // dispatch(crud.resetAction({actionType:\"delete\"})); // check here maybe it wrong\n    }\n    if (current) {\n      let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete({ entity, id }));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport dayjs from 'dayjs';\n\nimport { useCrudContext } from '@/context/crud';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const isDate = props.isDate || false;\n      let value = valueByString(currentResult, propsKey);\n      value = isDate ? dayjs(value).format('DD/MM/YYYY') : value;\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useDebounce } from 'react-use';\nimport { Select, Empty } from 'antd';\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\n\nimport { useCrudContext } from '@/context/crud';\nimport { selectSearchedItems } from '@/redux/crud/selectors';\n\nfunction SearchItemComponent({ config, onRerender }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = '_id' } = searchConfig;\n\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n\n  const isSearching = useRef(false);\n\n  const [searching, setSearching] = useState(false);\n\n  const [valToSearch, setValToSearch] = useState('');\n  const [debouncedValue, setDebouncedValue] = useState('');\n\n  const [, cancel] = useDebounce(\n    () => {\n      setDebouncedValue(valToSearch);\n    },\n    500,\n    [valToSearch]\n  );\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n\n  useEffect(() => {\n    if (debouncedValue != '') {\n      const options = {\n        q: debouncedValue,\n        fields: searchFields,\n      };\n      dispatch(crud.search({ entity, options }));\n    }\n    return () => {\n      cancel();\n    };\n  }, [debouncedValue]);\n\n  const onSearch = (searchText) => {\n    if (searchText && searchText != '') {\n      isSearching.current = true;\n      setSearching(true);\n      setOptions([]);\n      setCurrentValue(undefined);\n      setValToSearch(searchText);\n    }\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem({ data: currentItem }));\n\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n    onRerender();\n  };\n  useEffect(() => {\n    if (isSearching.current) {\n      if (isSuccess) {\n        setOptions(result);\n      } else {\n        setSearching(false);\n        setCurrentValue(undefined);\n        setOptions([]);\n      }\n    }\n  }, [isSuccess, result]);\n\n  return (\n    <Select\n      loading={isLoading}\n      showSearch\n      allowClear\n      placeholder={<SearchOutlined style={{ float: 'right', padding: '8px 0' }} />}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      notFoundContent={searching ? '... Searching' : <Empty />}\n      value={currentValue}\n      onSearch={onSearch}\n      style={{ width: '100%' }}\n      onSelect={onSelect}\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option key={optionField[outputValue]} value={optionField[outputValue]}>\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default function SearchItem({ config }) {\n  const [state, setState] = useState([0]);\n\n  const onRerender = () => {\n    setState([state + 1]);\n  };\n\n  return state.map((comp) => (\n    <SearchItemComponent key={comp} config={config} onRerender={onRerender} />\n  ));\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { Dropdown, Button, PageHeader, Table, Col } from 'antd';\n\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectListItems } from '@/redux/crud/selectors';\n\nimport uniqueId from '@/utils/uinqueId';\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: '',\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={['click']}>\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    const options = { page: pagination.current || 1 };\n    dispatch(crud.list({ entity, options }));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list({ entity }));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: '20px 0px',\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectItemById } from '@/redux/crud/selectors';\nimport { useCrudContext } from '@/context/crud';\nimport uniqueId from '@/utils/uinqueId';\nimport DataTable from '@/components/DataTable';\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem({ data: item }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentItem({ data: item }));\n    dispatch(crud.currentAction({ actionType: 'update', data: item }));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction({ actionType: 'delete', data: item }));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return <DataTable config={config} DropDownRowMenu={DropDownRowMenu} AddNewItem={AddNewItem} />;\n}\n","import React, { useLayoutEffect, useEffect, useState } from 'react';\nimport { Row, Col, Button, Divider } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport CreateForm from '@/components/CreateForm';\nimport UpdateForm from '@/components/UpdateForm';\nimport DeleteModal from '@/components/DeleteModal';\nimport ReadItem from '@/components/ReadItem';\nimport SearchItem from '@/components/SearchItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\n\nimport { CrudLayout } from '@/layout';\n\nimport CrudDataTable from './CrudDataTable';\n\nfunction SidePanelTopContent({ config, formElements }) {\n  const { crudContextAction, state } = useCrudContext();\n  const { entityDisplayLabels } = config;\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const { isReadBoxOpen, isEditBoxOpen } = state;\n  const { result: currentItem } = useSelector(selectCurrentItem);\n  const dispatch = useDispatch();\n\n  const [labels, setLabels] = useState('');\n  useEffect(() => {\n    if (currentItem) {\n      const currentlabels = entityDisplayLabels.map((x) => currentItem[x]).join(' ');\n\n      setLabels(currentlabels);\n    }\n  }, [currentItem]);\n\n  const removeItem = () => {\n    dispatch(crud.currentAction({ actionType: 'delete', data: currentItem }));\n    modal.open();\n  };\n  const editItem = () => {\n    dispatch(crud.currentAction({ actionType: 'update', data: currentItem }));\n    editBox.open();\n  };\n\n  const show = isReadBoxOpen || isEditBoxOpen ? { opacity: 1 } : { opacity: 0 };\n  return (\n    <>\n      <Row style={show}>\n        <Col span={13}>\n          <p style={{ marginBottom: '10px' }}>{labels}</p>\n        </Col>\n        <Col span={11}>\n          <Button\n            onClick={removeItem}\n            type=\"text\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '5px' }}\n          >\n            remove\n          </Button>\n          <Button\n            onClick={editItem}\n            type=\"text\"\n            icon={<EditOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '0px' }}\n          >\n            edit\n          </Button>\n        </Col>\n\n        <Col span={24}>\n          <div className=\"line\"></div>\n        </Col>\n        <div className=\"space10\"></div>\n      </Row>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>{config.PANEL_TITLE}</h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button onClick={addNewItem} block={true} icon={<PlusOutlined />}></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction CrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={<CreateForm config={config} formElements={createForm} />}\n      sidePanelTopContent={<SidePanelTopContent config={config} formElements={updateForm} />}\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default CrudModule;\n"],"sourceRoot":""}