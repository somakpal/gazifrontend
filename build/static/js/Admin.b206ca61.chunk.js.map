{"version":3,"sources":["modules/AdminCrudModule/AdminDataTable.jsx","modules/AdminCrudModule/UpdatePassword.jsx","modules/AdminCrudModule/index.jsx","forms/AdminForm.jsx","pages/Admin.jsx","context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/selectors.js","redux/crud/actions.js","context/erp/types.jsx","context/erp/reducer.jsx","context/erp/actions.jsx","context/erp/selectors.jsx","context/erp/index.jsx","components/Loading/index.jsx","request/request.js","utils/helpers.js","layout/DefaultLayout/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/ErpContextLayout/index.jsx","layout/ErpLayout/index.jsx","layout/DashboardLayout/index.jsx","components/ReadItem/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","hooks/useFetch/index.jsx","components/SelectAsync/index.jsx","hooks/useOnFetch/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js"],"names":["AddNewItem","config","crudContextAction","useCrudContext","collapsedBox","panel","ADD_NEW_ENTITY","onClick","open","close","type","DropDownRowMenu","row","dispatch","useDispatch","modal","advancedBox","readBox","editBox","item","useSelector","selectItemById","id","style","minWidth","Item","icon","EyeOutlined","crud","currentItem","data","uniqueId","EditOutlined","currentAction","actionType","LockOutlined","DeleteOutlined","AdminCrudModule","DataTable","UpdatePassword","current","selectUpdatedItem","state","Form","useForm","form","useOnFetch","onFetch","isLoading","result","isSuccess","useEffect","resetFields","resetAction","show","isAdvancedBoxOpen","display","opacity","Loading","className","layout","onFinish","fieldsValue","entity","request","patch","jsonData","label","name","rules","required","message","len","Password","autoComplete","paddingRight","htmlType","paddingLeft","SidePanelTopContent","formElements","entityDisplayLabels","isReadBoxOpen","isEditBoxOpen","selectCurrentItem","useState","setLabels","currentlabels","map","x","join","span","size","float","marginRight","marginLeft","ReadItem","UpdateForm","FixHeaderPanel","gutter","fontSize","marginBottom","PANEL_TITLE","SearchItem","block","PlusOutlined","createForm","updateForm","useLayoutEffect","resetState","fixHeaderPanel","sidePanelBottomContent","CreateForm","sidePanelTopContent","DeleteModal","AdminForm","isUpdateForm","SelectAsync","displayLabels","Admin","dataTableTitle","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","title","dataIndex","dataTableColumns","searchConfig","searchFields","outputValue","OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelClose","isBoxCollapsed","contextReducer","action","actionTypes","Error","contextActions","collapse","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","context","useContext","undefined","crudContextSelector","selectCrud","createSelector","selectListItems","list","itemId","items","find","selectCreatedItem","create","update","selectDeletedItem","read","delete","selectSearchedItems","search","a","keyState","payload","options","page","success","pagination","parseInt","pageSize","showSizeChanger","total","count","JSON","stringify","isOpen","recordPayment","deleteModal","dataTableList","last","readPanel","updatePanel","createPanel","recordPanel","ErpContext","ErpContextProvider","useErpContext","erpContextAction","erpContextSelector","antIcon","spin","indicator","spinning","axios","defaults","baseURL","API_BASE_URL","withCredentials","post","response","successHandler","notifyOnSuccess","notifyOnFailed","errorHandler","get","filter","equal","query","key","slice","source","CancelToken","valueByString","obj","string","devider","split","reduce","o","Object","byString","s","replace","i","n","length","k","DefaultLayout","CollapseBoxButton","onChange","TopCollapseBox","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","Sider","Layout","SidePanel","isSidePanelClose","setSidePanel","leftSider","setLeftSider","opacitySider","setOpacitySider","paddingTopSider","setPaddingTopSider","useAppContext","stateApp","appContextAction","isNavMenuClose","navMenu","timer","setTimeout","clearTimeout","trigger","MenuOutlined","width","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","paddingTop","Content","ContentBox","stateCrud","padding","margin","maxWidth","flex","CrudLayout","minHeight","ErpContextLayout","ErpLayout","DashboardLayout","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","propsTitle","isDate","dayjs","format","push","itemsList","newValues","birthday","date","expiredDate","created","updated","setFieldsValue","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","SearchItemComponent","onRerender","relations","selectOptions","setOptions","currentValue","setCurrentValue","isSearching","searching","setSearching","valToSearch","setValToSearch","debouncedValue","setDebouncedValue","useDebounce","cancel","optionField","q","fields","loading","showSearch","allowClear","placeholder","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","onSearch","searchText","onSelect","Option","setState","comp","render","overlay","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","history","back","ghost","extra","columns","rowKey","dataSource","useFetch","fetchingFn","setResult","setIsSuccess","setIsLoading","fetchData","fetchIsLoading","disabled","newValue","ref","React","AntdIcon","_objectSpread","LockOutlinedSvg","displayName"],"mappings":"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","file":"static/js/Admin.b206ca61.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Button, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, LockOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectItemById } from '@/redux/crud/selectors';\nimport { useCrudContext } from '@/context/crud';\nimport uniqueId from '@/utils/uinqueId';\nimport DataTable from '@/components/DataTable';\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, advancedBox, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row.id));\n  const Show = () => {\n    dispatch(crud.currentItem({ data: item }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentItem({ data: item }));\n    dispatch(crud.currentAction({ actionType: 'update', data: item }));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function UpdatePassword() {\n    dispatch(crud.currentItem({ data: item }));\n    dispatch(crud.currentAction({ actionType: 'update', data: item }));\n    advancedBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction({ actionType: 'delete', data: item }));\n    modal.open();\n  }\n  return (\n    <Menu style={{ minWidth: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<LockOutlined />} onClick={UpdatePassword}>\n        Update Password\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function AdminCrudModule({ config }) {\n  return <DataTable config={config} DropDownRowMenu={DropDownRowMenu} AddNewItem={AddNewItem} />;\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectUpdatedItem } from '@/redux/crud/selectors';\n\nimport { Button, Form, Input } from 'antd';\n\nimport Loading from '@/components/Loading';\nimport useOnFetch from '@/hooks/useOnFetch';\nimport { request } from '@/request';\n\nexport default function UpdatePassword({ config }) {\n  const dispatch = useDispatch();\n  const { current } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n\n  const [form] = Form.useForm();\n\n  const { onFetch, result, isLoading, isSuccess } = useOnFetch();\n\n  const handelSubmit = (fieldsValue) => {\n    const entity = 'admin/password-update/' + current.id;\n    const updateFn = () => {\n      return request.patch({ entity, jsonData: fieldsValue });\n    };\n    onFetch(updateFn);\n  };\n\n  /////\n\n  const { readBox } = crudContextAction;\n\n  const showCurrentRecord = () => {\n    readBox.open();\n  };\n  useEffect(() => {\n    if (isSuccess) {\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'update' }));\n    }\n  }, [isSuccess]);\n\n  const { isAdvancedBoxOpen } = state;\n\n  const show = isAdvancedBoxOpen\n    ? { display: 'block', opacity: 1 }\n    : { display: 'none', opacity: 0 };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <h3>Update Password</h3>\n        <div className=\"space10\"></div>\n        <Form form={form} layout=\"vertical\" onFinish={handelSubmit}>\n          <Form.Item\n            label=\"New Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!',\n                len: 8,\n              },\n            ]}\n          >\n            <Input.Password autoComplete=\"new-password\" />\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingRight: '5px',\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingLeft: '5px',\n            }}\n          >\n            <Button onClick={showCurrentRecord}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useLayoutEffect, useState, useEffect } from 'react';\nimport { Row, Col, Button } from 'antd';\n\nimport { PlusOutlined, EditOutlined, DeleteOutlined, LockOutlined } from '@ant-design/icons';\n\nimport CreateForm from '@/components/CreateForm';\nimport UpdateForm from '@/components/UpdateForm';\nimport DeleteModal from '@/components/DeleteModal';\nimport ReadItem from '@/components/ReadItem';\nimport SearchItem from '@/components/SearchItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\n\nimport { CrudLayout } from '@/layout';\n\nimport AdminDataTable from './AdminDataTable';\nimport UpdatePassword from './UpdatePassword';\n\nimport { selectCurrentItem } from '@/redux/crud/selectors';\n\nfunction SidePanelTopContent({ config, formElements }) {\n  const { crudContextAction, state } = useCrudContext();\n  const { entityDisplayLabels } = config;\n  const { panel, advancedBox, modal, readBox, editBox } = crudContextAction;\n\n  const { isReadBoxOpen, isEditBoxOpen, isAdvancedBoxOpen } = state;\n  const { result: currentItem } = useSelector(selectCurrentItem);\n  const dispatch = useDispatch();\n\n  const [labels, setLabels] = useState('');\n  useEffect(() => {\n    if (currentItem) {\n      const currentlabels = entityDisplayLabels.map((x) => currentItem[x]).join(' ');\n\n      setLabels(currentlabels);\n    }\n  }, [currentItem]);\n\n  const removeItem = () => {\n    dispatch(crud.currentAction({ actionType: 'delete', data: currentItem }));\n    modal.open();\n  };\n  const editItem = () => {\n    dispatch(crud.currentAction({ actionType: 'update', data: currentItem }));\n    editBox.open();\n  };\n  const updatePassword = () => {\n    dispatch(crud.currentAction({ actionType: 'update', data: currentItem }));\n    advancedBox.open();\n  };\n\n  const show =\n    isReadBoxOpen || isEditBoxOpen || isAdvancedBoxOpen ? { opacity: 1 } : { opacity: 0 };\n  return (\n    <>\n      <Row style={show}>\n        {/* <Col span={13}>\n          <p style={{ marginBottom: \"10px\" }}>{labels}</p>\n        </Col> */}\n        <Col span={24}>\n          <Button\n            onClick={removeItem}\n            type=\"text\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            style={{\n              float: 'left',\n              marginRight: '5px',\n              marginLeft: '-5px',\n            }}\n          >\n            remove\n          </Button>\n          <Button\n            onClick={editItem}\n            type=\"text\"\n            icon={<EditOutlined />}\n            size=\"small\"\n            style={{ float: 'left', marginRight: '5px' }}\n          >\n            edit\n          </Button>\n          <Button\n            onClick={updatePassword}\n            type=\"text\"\n            icon={<LockOutlined />}\n            size=\"small\"\n            style={{ float: 'left', marginRight: '0px' }}\n          >\n            update password\n          </Button>\n        </Col>\n\n        <Col span={24}></Col>\n        <div className=\"space10\"></div>\n      </Row>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n      <UpdatePassword config={config} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>{config.PANEL_TITLE}</h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button onClick={addNewItem} block={true} icon={<PlusOutlined />}></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AdminCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={<CreateForm config={config} formElements={createForm} />}\n      sidePanelTopContent={<SidePanelTopContent config={config} formElements={updateForm} />}\n    >\n      <AdminDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default AdminCrudModule;\n","import SelectAsync from '@/components/SelectAsync';\nimport { Form, Input } from 'antd';\n\nexport default function AdminForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Name!',\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your surname!',\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Email!',\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n\n      {!isUpdateForm && (\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Password!',\n            },\n          ]}\n        >\n          <Input.Password autoComplete=\"new-password\" />\n        </Form.Item>\n      )}\n      <Form.Item\n        label=\"Role\"\n        name=\"role\"\n        rules={[\n          {\n            required: true,\n            message: 'This Field is required',\n          },\n        ]}\n      >\n        <SelectAsync entity={'role'} displayLabels={['displayName']}></SelectAsync>\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\n\nimport AdminCrudModule from '@/modules/AdminCrudModule';\nimport AdminForm from '@/forms/AdminForm';\n\nexport default function Admin() {\n  const entity = 'admin';\n  const searchConfig = {\n    displayLabels: ['name', 'surname'],\n    searchFields: 'email,name,surname',\n    outputValue: 'id',\n  };\n\n  const PANEL_TITLE = 'Admin Panel';\n  const dataTableTitle = 'Admin Lists';\n  const entityDisplayLabels = ['email'];\n\n  const readColumns = [\n    { title: 'Name', dataIndex: 'name' },\n    { title: 'Surname', dataIndex: 'surname' },\n    { title: 'Email', dataIndex: 'email' },\n    { title: \"Role d'utilisateur\", dataIndex: 'role.displayName' },\n  ];\n\n  const dataTableColumns = [\n    { title: 'Name', dataIndex: 'name' },\n    { title: 'Surname', dataIndex: 'surname' },\n    { title: 'Email', dataIndex: 'email' },\n    { title: \"Role d'utilisateur\", dataIndex: ['role', 'displayName'] },\n  ];\n  const ADD_NEW_ENTITY = 'Add new admin';\n  const DATATABLE_TITLE = 'Admins List';\n  const ENTITY_NAME = 'admin';\n  const CREATE_ENTITY = 'Create admin';\n  const UPDATE_ENTITY = 'Update admin';\n\n  const config = {\n    entity,\n    PANEL_TITLE,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <AdminCrudModule\n      createForm={<AdminForm />}\n      updateForm={<AdminForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_ADVANCED_BOX = 'OPEN_ADVANCED_BOX';\nexport const CLOSE_ADVANCED_BOX = 'CLOSE_ADVANCED_BOX';\n\nexport const OPEN_EDIT_BOX = 'OPEN_EDIT_BOX';\nexport const CLOSE_EDIT_BOX = 'CLOSE_EDIT_BOX';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n\nexport const OPEN_BOX = 'OPEN_BOX';\nexport const CLOSE_BOX = 'CLOSE_BOX';\nexport const COLLAPSE_BOX = 'COLLAPSE_BOX';\n\nexport const OPEN_READ_BOX = 'OPEN_READ_BOX';\nexport const CLOSE_READ_BOX = 'CLOSE_READ_BOX';\nexport const COLLAPSE_READ_BOX = 'COLLAPSE_READ_BOX';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelClose: true,\n  isBoxCollapsed: false,\n  isReadBoxOpen: false,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelClose: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: !state.isPanelClose,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log('readBox open');\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log('readBox close');\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error('useCrudContext must be used within a CrudContextProvider');\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import { createSelector } from 'reselect';\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector([selectCrud], (crud) => crud.current);\n\nexport const selectListItems = createSelector([selectCrud], (crud) => crud.list);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) => list.result.items.find((item) => item.id === itemId));\n\nexport const selectCreatedItem = createSelector([selectCrud], (crud) => crud.create);\n\nexport const selectUpdatedItem = createSelector([selectCrud], (crud) => crud.update);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector([selectCrud], (crud) => crud.delete);\n\nexport const selectSearchedItems = createSelector([selectCrud], (crud) => crud.search);\n","import * as actionTypes from './types';\nimport { request } from '@/request';\n\nexport const crud = {\n  resetState:\n    (props = {}) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.RESET_STATE,\n        });\n      },\n  resetAction:\n    ({ actionType }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.RESET_ACTION,\n          keyState: actionType,\n          payload: null,\n        });\n      },\n  currentItem:\n    ({ data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: { ...data },\n        });\n      },\n  currentAction:\n    ({ actionType, data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ACTION,\n          keyState: actionType,\n          payload: { ...data },\n        });\n      },\n  list:\n    ({ entity, options = { page: 1 } }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'list',\n          payload: null,\n        });\n\n        let data = await request.list({ entity, options });\n\n        if (data.success === true) {\n          const result = {\n            items: data.result,\n            pagination: {\n              current: parseInt(data.pagination.page, 10),\n              pageSize: 10,\n              showSizeChanger: false,\n              total: parseInt(data.pagination.count, 10),\n            },\n          };\n          console.log('somak RESULT BHaii..' + JSON.stringify(result));\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'list',\n            payload: result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'list',\n            payload: null,\n          });\n        }\n      },\n  create:\n    ({ entity, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'create',\n          payload: null,\n        });\n\n        let data = await request.create({ entity, jsonData });\n        console.log('somak data result', data.result);\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'create',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'create',\n            payload: null,\n          });\n        }\n      },\n  read:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'read',\n          payload: null,\n        });\n\n        let data = await request.read({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'read',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'read',\n            payload: null,\n          });\n        }\n      },\n  update:\n    ({ entity, id, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'update',\n          payload: null,\n        });\n\n        let data = await request.update({ entity, id, jsonData });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'update',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'update',\n            payload: null,\n          });\n        }\n      },\n\n  delete:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'delete',\n          payload: null,\n        });\n\n        let data = await request.delete({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'delete',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'update',\n            payload: null,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: null,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'delete',\n            payload: null,\n          });\n        }\n      },\n\n  search:\n    ({ entity, options = {} }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'search',\n          payload: null,\n        });\n\n        let data = await request.search({ entity, options });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'search',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'search',\n            payload: null,\n          });\n        }\n      },\n};\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  recordPayment: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  dataTableList: {\n    isOpen: true,\n  },\n  last: null,\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        dataTableList: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'read' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'update' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'create' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    recordPanel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL,\n          keyState: 'recordPayment',\n        });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error('useErpContext must be used within a ErpContextProvider');\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import axios from 'axios';\nimport { API_BASE_URL } from '@/config/serverApiConfig';\n\nimport errorHandler from './errorHandler';\nimport successHandler from './successHandler';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nconst request = {\n  create: async ({ entity, jsonData }) => {\n    console.log('🚀 Create Request 🚀 ~ file: request.js ~ line 19 ~ create: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.post(entity + '/create', jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async ({ entity, id }) => {\n    try {\n      const response = await axios.get(entity + '/read/' + id);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async ({ entity, id, jsonData }) => {\n    console.log('🚀 ~ file: request.js ~ line 34 ~ update: ~ id', id);\n    console.log('🚀 Update Request 🚀 ~ file: request.js ~ line 42 ~ update: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.patch(entity + '/update/' + id, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async ({ entity, id, options = {} }) => {\n    try {\n      const response = await axios.delete(entity + '/delete/' + id);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async ({ entity, options = {} }) => {\n    try {\n      let filter = options.filter ? 'filter=' + options.filter : '';\n      let equal = options.equal ? '&equal=' + options.equal : '';\n      let query = `?${filter}${equal}`;\n\n      const response = await axios.get(entity + '/filter' + query);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n      // headersInstance.cancelToken = source.token;\n      //console.log('somak bhai- ' + query);\n      const response = await axios.get(entity + '/search' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n\n      const response = await axios.get(entity + '/list' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async ({ entity, jsonData, options = {} }) => {\n    try {\n      const response = await axios.post(entity, jsonData);\n\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async ({ entity }) => {\n    try {\n      const response = await axios.get(entity);\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async ({ entity, jsonData }) => {\n    try {\n      const response = await axios.patch(entity, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  source: () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import { parse } from 'querystring';\nimport dayjs from 'dayjs';\nfunction getPageQuery() {\n  parse(window.location.href.split('?')[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split('.').reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  s = s.replace(/^\\./, ''); // strip a leading dot\n  let a = s.split('.');\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split('.').every(function (x) {\n    if (typeof obj !== 'object' || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = '|';\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(' ');\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll('input, select, textarea');\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== 'true') {\n      if (element.type === 'file') {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\nexport const isDate = function ({ date, format = 'YYYY-MM-DD' }) {\n  if (typeof date == 'boolean') return false;\n  if (typeof date == 'number') return false;\n  if (dayjs(date, format).isValid()) return true;\n  return false;\n};\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + ' ' + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll('[data-property]').forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case 'date':\n        value = formatDate(value);\n        break;\n\n      case 'datetime':\n        value = formatDatetime(value);\n        break;\n\n      case 'currency':\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from 'react';\n\nimport { CrudContextProvider } from '@/context/crud';\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'none', opacity: 0 } : { display: 'block', opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n}) {\n  const collapsed = isCollapsed ? 'collapsed' : '';\n  return (\n    <div className=\"panelBox\">\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={'collapseBox ' + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>{bottomContent}</BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\nimport { Layout } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport CollapseBox from '../CollapseBox';\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({ config, topContent, bottomContent, fixHeaderPanel }) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelClose, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n  const [leftSider, setLeftSider] = useState('-1px');\n  const [opacitySider, setOpacitySider] = useState(0);\n  const [paddingTopSider, setPaddingTopSider] = useState('20px');\n\n  const { state: stateApp, appContextAction } = useAppContext();\n  const { isNavMenuClose } = stateApp;\n  const { navMenu } = appContextAction;\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      setOpacitySider(0);\n      setPaddingTopSider('20px');\n\n      timer = setTimeout(() => {\n        setLeftSider('-1px');\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n      setLeftSider(0);\n      timer = setTimeout(() => {\n        setOpacitySider(1);\n        setPaddingTopSider(0);\n      }, 200);\n      if (!isNavMenuClose) {\n        navMenu.close();\n      }\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isSidePanelClose}\n      collapsedWidth={'0px'}\n      onCollapse={collapsePanel}\n      className=\"sidePanel\"\n      zeroWidthTriggerStyle={{\n        right: '-50px',\n        top: '15px',\n      }}\n      style={{\n        left: leftSider,\n      }}\n    >\n      <div\n        className=\"sidePanelContent\"\n        style={{\n          opacity: opacitySider,\n          paddingTop: paddingTopSider,\n        }}\n      >\n        {fixHeaderPanel}\n        <CollapseBox\n          buttonTitle={ADD_NEW_ENTITY}\n          isCollapsed={isBoxCollapsed}\n          onCollapse={collapsePanelBox}\n          topContent={topContent}\n          bottomContent={bottomContent}\n        ></CollapseBox>\n      </div>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport DefaultLayout from '../DefaultLayout';\n\nimport SidePanel from '@/components/SidePanel';\nimport { Layout } from 'antd';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\n\nconst { Content } = Layout;\n\nconst ContentBox = ({ children }) => {\n  const { state: stateCrud, crudContextAction } = useCrudContext();\n  const { state: stateApp } = useAppContext();\n  const { isPanelClose } = stateCrud;\n  const { isNavMenuClose } = stateApp;\n  const { panel } = crudContextAction;\n\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      timer = setTimeout(() => {\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  useEffect(() => {\n    if (!isNavMenuClose) {\n      panel.close();\n    }\n  }, [isNavMenuClose]);\n  return (\n    <Content\n      className=\"whiteBox shadow\"\n      style={{\n        padding: '50px 40px',\n        margin: '100px auto',\n        width: isSidePanelClose ? '100%' : '830px',\n        maxWidth: '1000px',\n        flex: 'none',\n      }}\n    >\n      {children}\n    </Content>\n  );\n};\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <>\n      <DefaultLayout>\n        <Layout style={{ minHeight: '100vh' }}>\n          <SidePanel\n            config={config}\n            topContent={sidePanelTopContent}\n            bottomContent={sidePanelBottomContent}\n            fixHeaderPanel={fixHeaderPanel}\n          ></SidePanel>\n          <Layout>\n            <ContentBox> {children}</ContentBox>\n          </Layout>\n        </Layout>\n      </DefaultLayout>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { ErpContextProvider } from '@/context/erp';\n\nfunction ErpContextLayout({ children }) {\n  return <ErpContextProvider>{children}</ErpContextProvider>;\n}\n\nexport default ErpContextLayout;\n","import React from 'react';\n\nimport ErpContextLayout from '../ErpContextLayout';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function ErpLayout({ children, config }) {\n  return (\n    <ErpContextLayout>\n      <Layout className=\"site-layout\">\n        <Content\n          className=\"whiteBox shadow\"\n          style={{\n            padding: '50px 40px',\n            margin: '100px auto',\n            width: '100%',\n            maxWidth: '1100px',\n          }}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </ErpContextLayout>\n  );\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <Content\n        style={{\n          padding: '30px 40px',\n          margin: '70px auto',\n          width: '100%',\n          maxWidth: '1100px',\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const isDate = props.isDate || false;\n      let value = valueByString(currentResult, propsKey);\n      value = isDate ? dayjs(value).format('DD/MM/YYYY') : value;\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCreatedItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    console.log('🚀 ~ file: index.jsx ~ line 19 ~ onSubmit ~ fieldsValue', fieldsValue);\n\n    dispatch(crud.create({ entity, jsonData: fieldsValue }));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'create' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectUpdatedItem } from '@/redux/crud/selectors';\n// import { isDate } from '@/utils/helpers';\n// import { selectCurrentItem } from '@/redux/crud/selectors';\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const showCurrentRecord = () => {\n    readBox.open();\n  };\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    console.log('🚀 ~ file: index.jsx ~ line 34 ~ onSubmit ~  current.id', current.id);\n    const id = current.id;\n    dispatch(crud.update({ entity, id, jsonData: fieldsValue }));\n  };\n  useEffect(() => {\n    if (current) {\n      let newValues = { ...current };\n      console.log('somak master: ' + JSON.stringify(newValues));\n      if (newValues.birthday) {\n        newValues = {\n          ...newValues,\n          birthday: dayjs(newValues['birthday']),\n        };\n      }\n      if (newValues.date) {\n        newValues = {\n          ...newValues,\n          date: dayjs(newValues['date']),\n        };\n      }\n      if (newValues.expiredDate) {\n        newValues = {\n          ...newValues,\n          expiredDate: dayjs(newValues['expiredDate']),\n        };\n      }\n      if (newValues.created) {\n        newValues = {\n          ...newValues,\n          created: dayjs(newValues['created']),\n        };\n      }\n      if (newValues.updated) {\n        newValues = {\n          ...newValues,\n          updated: dayjs(newValues['updated']),\n        };\n      }\n      // console.log('🚀 ~ file: index.jsx ~ line 40 ~ useEffect ~ obj', newValues);\n      form.setFieldsValue(newValues);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'update' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingRight: '5px',\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingLeft: '5px',\n            }}\n          >\n            <Button onClick={showCurrentRecord}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectDeletedItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = 'Do you want delete : ',\n    modalTitle = 'Remove Item',\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState('');\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list({ entity }));\n      // dispatch(crud.resetAction({actionType:\"delete\"})); // check here maybe it wrong\n    }\n    if (current) {\n      let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current.id;\n    dispatch(crud.delete({ entity, id }));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDebounce } from 'react-use';\nimport { Select, Empty } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectSearchedItems } from '@/redux/crud/selectors';\nfunction SearchItemComponent({ config, onRerender }) {\n  let { entity, searchConfig, relations = '' } = config;\n  const { displayLabels, searchFields, outputValue = 'id' } = searchConfig;\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n  const isSearching = useRef(false);\n  const [searching, setSearching] = useState(false);\n  const [valToSearch, setValToSearch] = useState('');\n  const [debouncedValue, setDebouncedValue] = useState('');\n\n  const [, cancel] = useDebounce(\n    () => {\n      setDebouncedValue(valToSearch);\n    },\n    500,\n    [valToSearch]\n  );\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n\n  useEffect(() => {\n    if (debouncedValue != '') {\n      const options = {\n        q: debouncedValue,\n        fields: searchFields,\n        relations: relations,\n      };\n      dispatch(crud.search({ entity, options }));\n    }\n    return () => {\n      cancel();\n    };\n  }, [debouncedValue]);\n\n  const onSearch = (searchText) => {\n    if (searchText && searchText != '') {\n      isSearching.current = true;\n      setSearching(true);\n      setOptions([]);\n      setCurrentValue(undefined);\n      setValToSearch(searchText);\n    }\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n    dispatch(crud.currentItem({ data: currentItem }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n    onRerender();\n  };\n  useEffect(() => {\n    if (isSearching.current) {\n      if (isSuccess) {\n        setOptions(result);\n      } else {\n        setSearching(false);\n        setCurrentValue(undefined);\n        setOptions([]);\n      }\n    }\n  }, [isSuccess, result]);\n\n  return (\n    <Select\n      loading={isLoading}\n      showSearch\n      allowClear\n      placeholder={<SearchOutlined style={{ float: 'right', padding: '8px 0' }} />}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      notFoundContent={searching ? '... Searching' : <Empty />}\n      value={currentValue}\n      onSearch={onSearch}\n      style={{ width: '100%' }}\n      onSelect={onSelect}\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option key={optionField[outputValue]} value={optionField[outputValue]}>\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default function SearchItem({ config }) {\n  const [state, setState] = useState([0]);\n\n  const onRerender = () => {\n    setState([state + 1]);\n  };\n\n  return state.map((comp) => (\n    <SearchItemComponent key={comp} config={config} onRerender={onRerender} />\n  ));\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { Dropdown, Button, PageHeader, Table } from 'antd';\n\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectListItems } from '@/redux/crud/selectors';\n\nimport uniqueId from '@/utils/uinqueId';\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, relations = '', dataTableColumns, dataTableTitle } = config;\n\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: '',\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={['click']}>\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    const options = { page: pagination.current || 1, relations: relations };\n    dispatch(crud.list({ entity, options }));\n  }, []);\n\n  useEffect(() => {\n    const options = { page: pagination.current || 1, relations: relations };\n    dispatch(crud.list({ entity, options }));\n    //dispatch(crud.list({ entity }));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: '20px 0px',\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item.id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useFetch(fetchingFn) {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return { result, isSuccess, isLoading };\n}\n","import React, { useState, useEffect } from 'react';\nimport { request } from '@/request';\nimport useFetch from '@/hooks/useFetch';\nimport { Select } from 'antd';\n\nexport default function SelectAsync({\n  entity,\n  displayLabels = ['name'],\n  outputValue = 'id',\n  value,\n  onChange,\n  options = {}\n}) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n\n  const asyncList = () => {\n    return request.list({ entity, options });\n  };\n  const { result, isLoading: fetchIsLoading, isSuccess } = useFetch(asyncList);\n  useEffect(() => {\n    isSuccess ? setOptions(result) : setOptions([]);\n    setIsLoading(fetchIsLoading);\n  }, [fetchIsLoading]);\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n  useEffect(() => {\n    // this for update Form , it's for setField\n    if (value) {\n      setCurrentValue(value[outputValue] || value); // set nested value or value\n      onChange(value[outputValue] || value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      loading={isLoading}\n      disabled={isLoading}\n      value={currentValue}\n      onChange={(newValue) => {\n        // setCurrentValue(newValue[outputValue] || newValue);\n        if (onChange) {\n          onChange(newValue[outputValue] || newValue);\n        }\n      }}\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option\n          key={optionField[outputValue] || optionField}\n          value={optionField[outputValue] || optionField}\n        >\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useOnFetch() {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let onFetch = async (fetchingFn) => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    setResult(data.result);\n    if (data.success === true) {\n      setIsSuccess(true);\n    } else {\n      setIsSuccess(false);\n    }\n\n    setIsLoading(false);\n  };\n\n  return { onFetch, result, isSuccess, isLoading };\n}\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);"],"sourceRoot":""}