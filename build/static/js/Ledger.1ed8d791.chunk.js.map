{"version":3,"sources":["forms/LedgerForm.jsx","pages/Ledger.jsx","context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/selectors.js","redux/crud/actions.js","context/erp/types.jsx","context/erp/reducer.jsx","context/erp/actions.jsx","context/erp/selectors.jsx","context/erp/index.jsx","components/Loading/index.jsx","request/request.js","utils/helpers.js","layout/DefaultLayout/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/ErpContextLayout/index.jsx","layout/ErpLayout/index.jsx","layout/DashboardLayout/index.jsx","components/ReadItem/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx"],"names":["LedgerForm","isUpdateForm","Item","name","label","rules","required","message","Ledger","config","entity","PANEL_TITLE","dataTableTitle","ENTITY_NAME","CREATE_ENTITY","ADD_NEW_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","title","dataIndex","dataTableColumns","render","Value","onClick","event","stopPropagation","href","linkval","text","record","props","style","color","parseInt","children","searchConfig","displayLabels","searchFields","outputValue","entityDisplayLabels","CrudModule","createForm","updateForm","OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelClose","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","selectCrud","crud","selectCurrentItem","createSelector","current","selectListItems","list","selectItemById","itemId","result","items","find","item","id","selectCreatedItem","create","selectUpdatedItem","update","selectDeletedItem","read","delete","selectSearchedItems","search","resetState","a","resetAction","actionType","keyState","payload","currentItem","data","currentAction","options","page","request","success","pagination","pageSize","showSizeChanger","total","count","JSON","stringify","jsonData","isOpen","recordPayment","deleteModal","dataTableList","last","readPanel","updatePanel","createPanel","recordPanel","ErpContext","ErpContextProvider","useErpContext","erpContextAction","erpContextSelector","Loading","isLoading","antIcon","fontSize","spin","indicator","spinning","axios","defaults","baseURL","API_BASE_URL","withCredentials","post","response","successHandler","notifyOnSuccess","notifyOnFailed","errorHandler","get","patch","filter","equal","query","key","slice","source","CancelToken","valueByString","obj","string","devider","split","map","reduce","o","x","join","Object","byString","s","replace","i","n","length","k","DefaultLayout","CollapseBoxButton","onChange","className","TopCollapseBox","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","Sider","Layout","SidePanel","fixHeaderPanel","useState","isSidePanelClose","setSidePanel","leftSider","setLeftSider","opacitySider","setOpacitySider","paddingTopSider","setPaddingTopSider","useAppContext","stateApp","appContextAction","isNavMenuClose","navMenu","useEffect","timer","setTimeout","clearTimeout","trigger","MenuOutlined","width","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","paddingTop","Content","ContentBox","stateCrud","padding","margin","maxWidth","flex","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","ErpContextLayout","ErpLayout","DashboardLayout","ReadItem","currentResult","useSelector","listState","setListState","isFirstRun","useRef","propsKey","propsTitle","isDate","dayjs","format","push","itemsList","gutter","CreateForm","formElements","useDispatch","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","htmlType","UpdateForm","newValues","birthday","date","expiredDate","created","updated","setFieldsValue","paddingRight","paddingLeft","DeleteModal","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","SearchItemComponent","onRerender","relations","selectOptions","setOptions","currentValue","setCurrentValue","isSearching","searching","setSearching","valToSearch","setValToSearch","debouncedValue","setDebouncedValue","useDebounce","cancel","optionField","q","fields","loading","showSearch","allowClear","placeholder","float","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","onSearch","searchText","onSelect","Option","SearchItem","setState","comp","DataTable","DropDownRowMenu","AddNewItem","row","overlay","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","history","back","ghost","extra","uniqueId","columns","rowKey","dataSource","icon","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","setLabels","currentlabels","marginBottom","size","marginLeft","FixHeaderPanel","block","PlusOutlined","useLayoutEffect"],"mappings":"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","file":"static/js/Ledger.1ed8d791.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Select } from 'antd';\n\nexport default function LedgerForm({ isUpdateForm = false }) {\n    return (\n        <>\n            <Form.Item\n                name=\"code\"\n                label=\"Ledger Code\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input Ledger Code!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"name\"\n                label=\"Ledger Name\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input Ledger Name!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n        </>\n    );\n}\n","import React from 'react';\n\nimport CrudModule from '@/modules/CrudModule';\nimport LedgerForm from '@/forms/LedgerForm';\n\nexport default function Ledger() {\n    const entity = 'ledger';\n    const searchConfig = {\n        displayLabels: ['name'],\n        searchFields: 'code,name',\n        outputValue: 'id',\n    };\n\n    const PANEL_TITLE = 'Ledger Panel';\n    const dataTableTitle = 'Ledger Lists';\n    const entityDisplayLabels = ['name'];\n\n    const readColumns = [\n        { title: 'Code', dataIndex: 'code' },\n        { title: 'Name', dataIndex: 'name' },\n        { title: 'Balance', dataIndex: 'balance' }\n    ];\n    const linkval = '/journal';\n    const dataTableColumns = [\n        {\n            dataIndex: \"id\",\n            title: \"\",\n            render: (Value) => {\n                return (\n                    <a\n                        onClick={(event) => event.stopPropagation()}\n                        href={linkval + '/' + Value}\n                    >\n                        Journals\n                    </a>\n                );\n            }\n        },\n        { title: 'Code', dataIndex: 'code' },\n        { title: 'Ledger', dataIndex: 'name' },\n        {\n            dataIndex: \"balance\",\n            title: \"Balance\",\n            render: (text, record) => {\n                return {\n                    props: {\n                        style: { color: parseInt(text) > 0 ? \"black\" : \"red\" }\n                    },\n                    children: <div>{text}</div>\n                };\n            }\n        },\n    ];\n    const ADD_NEW_ENTITY = 'Add new Ledger';\n    const DATATABLE_TITLE = 'Ledgers List';\n    const ENTITY_NAME = 'Ledger';\n    const CREATE_ENTITY = 'Create Ledger';\n    const UPDATE_ENTITY = 'Update Ledger';\n\n    const config = {\n        entity,\n        PANEL_TITLE,\n        dataTableTitle,\n        ENTITY_NAME,\n        CREATE_ENTITY,\n        ADD_NEW_ENTITY,\n        UPDATE_ENTITY,\n        DATATABLE_TITLE,\n        readColumns,\n        dataTableColumns,\n        searchConfig,\n        entityDisplayLabels,\n    };\n    return (\n        <CrudModule\n            createForm={<LedgerForm />}\n            updateForm={<LedgerForm isUpdateForm={true} />}\n            config={config}\n        />\n    );\n}\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_ADVANCED_BOX = 'OPEN_ADVANCED_BOX';\nexport const CLOSE_ADVANCED_BOX = 'CLOSE_ADVANCED_BOX';\n\nexport const OPEN_EDIT_BOX = 'OPEN_EDIT_BOX';\nexport const CLOSE_EDIT_BOX = 'CLOSE_EDIT_BOX';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n\nexport const OPEN_BOX = 'OPEN_BOX';\nexport const CLOSE_BOX = 'CLOSE_BOX';\nexport const COLLAPSE_BOX = 'COLLAPSE_BOX';\n\nexport const OPEN_READ_BOX = 'OPEN_READ_BOX';\nexport const CLOSE_READ_BOX = 'CLOSE_READ_BOX';\nexport const COLLAPSE_READ_BOX = 'COLLAPSE_READ_BOX';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelClose: true,\n  isBoxCollapsed: false,\n  isReadBoxOpen: false,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelClose: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: !state.isPanelClose,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log('readBox open');\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log('readBox close');\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error('useCrudContext must be used within a CrudContextProvider');\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import { createSelector } from 'reselect';\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector([selectCrud], (crud) => crud.current);\n\nexport const selectListItems = createSelector([selectCrud], (crud) => crud.list);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) => list.result.items.find((item) => item.id === itemId));\n\nexport const selectCreatedItem = createSelector([selectCrud], (crud) => crud.create);\n\nexport const selectUpdatedItem = createSelector([selectCrud], (crud) => crud.update);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector([selectCrud], (crud) => crud.delete);\n\nexport const selectSearchedItems = createSelector([selectCrud], (crud) => crud.search);\n","import * as actionTypes from './types';\nimport { request } from '@/request';\n\nexport const crud = {\n  resetState:\n    (props = {}) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.RESET_STATE,\n        });\n      },\n  resetAction:\n    ({ actionType }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.RESET_ACTION,\n          keyState: actionType,\n          payload: null,\n        });\n      },\n  currentItem:\n    ({ data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: { ...data },\n        });\n      },\n  currentAction:\n    ({ actionType, data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ACTION,\n          keyState: actionType,\n          payload: { ...data },\n        });\n      },\n  list:\n    ({ entity, options = { page: 1 } }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'list',\n          payload: null,\n        });\n\n        let data = await request.list({ entity, options });\n\n        if (data.success === true) {\n          const result = {\n            items: data.result,\n            pagination: {\n              current: parseInt(data.pagination.page, 10),\n              pageSize: 10,\n              showSizeChanger: false,\n              total: parseInt(data.pagination.count, 10),\n            },\n          };\n          console.log('somak RESULT BHaii..' + JSON.stringify(result));\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'list',\n            payload: result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'list',\n            payload: null,\n          });\n        }\n      },\n  create:\n    ({ entity, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'create',\n          payload: null,\n        });\n\n        let data = await request.create({ entity, jsonData });\n        console.log('somak data result', data.result);\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'create',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'create',\n            payload: null,\n          });\n        }\n      },\n  read:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'read',\n          payload: null,\n        });\n\n        let data = await request.read({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'read',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'read',\n            payload: null,\n          });\n        }\n      },\n  update:\n    ({ entity, id, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'update',\n          payload: null,\n        });\n\n        let data = await request.update({ entity, id, jsonData });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'update',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'update',\n            payload: null,\n          });\n        }\n      },\n\n  delete:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'delete',\n          payload: null,\n        });\n\n        let data = await request.delete({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'delete',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'update',\n            payload: null,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: null,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'delete',\n            payload: null,\n          });\n        }\n      },\n\n  search:\n    ({ entity, options = {} }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'search',\n          payload: null,\n        });\n\n        let data = await request.search({ entity, options });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'search',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'search',\n            payload: null,\n          });\n        }\n      },\n};\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  recordPayment: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  dataTableList: {\n    isOpen: true,\n  },\n  last: null,\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        dataTableList: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'read' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'update' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'create' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    recordPanel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL,\n          keyState: 'recordPayment',\n        });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error('useErpContext must be used within a ErpContextProvider');\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import axios from 'axios';\nimport { API_BASE_URL } from '@/config/serverApiConfig';\n\nimport errorHandler from './errorHandler';\nimport successHandler from './successHandler';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nconst request = {\n  create: async ({ entity, jsonData }) => {\n    console.log('🚀 Create Request 🚀 ~ file: request.js ~ line 19 ~ create: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.post(entity + '/create', jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async ({ entity, id }) => {\n    try {\n      const response = await axios.get(entity + '/read/' + id);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async ({ entity, id, jsonData }) => {\n    console.log('🚀 ~ file: request.js ~ line 34 ~ update: ~ id', id);\n    console.log('🚀 Update Request 🚀 ~ file: request.js ~ line 42 ~ update: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.patch(entity + '/update/' + id, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async ({ entity, id, options = {} }) => {\n    try {\n      const response = await axios.delete(entity + '/delete/' + id);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async ({ entity, options = {} }) => {\n    try {\n      let filter = options.filter ? 'filter=' + options.filter : '';\n      let equal = options.equal ? '&equal=' + options.equal : '';\n      let query = `?${filter}${equal}`;\n\n      const response = await axios.get(entity + '/filter' + query);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n      // headersInstance.cancelToken = source.token;\n      //console.log('somak bhai- ' + query);\n      const response = await axios.get(entity + '/search' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n\n      const response = await axios.get(entity + '/list' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async ({ entity, jsonData, options = {} }) => {\n    try {\n      const response = await axios.post(entity, jsonData);\n\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async ({ entity }) => {\n    try {\n      const response = await axios.get(entity);\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async ({ entity, jsonData }) => {\n    try {\n      const response = await axios.patch(entity, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  source: () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import { parse } from 'querystring';\nimport dayjs from 'dayjs';\nfunction getPageQuery() {\n  parse(window.location.href.split('?')[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split('.').reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  s = s.replace(/^\\./, ''); // strip a leading dot\n  let a = s.split('.');\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split('.').every(function (x) {\n    if (typeof obj !== 'object' || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = '|';\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(' ');\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll('input, select, textarea');\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== 'true') {\n      if (element.type === 'file') {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\nexport const isDate = function ({ date, format = 'YYYY-MM-DD' }) {\n  if (typeof date == 'boolean') return false;\n  if (typeof date == 'number') return false;\n  if (dayjs(date, format).isValid()) return true;\n  return false;\n};\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + ' ' + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll('[data-property]').forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case 'date':\n        value = formatDate(value);\n        break;\n\n      case 'datetime':\n        value = formatDatetime(value);\n        break;\n\n      case 'currency':\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from 'react';\n\nimport { CrudContextProvider } from '@/context/crud';\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'none', opacity: 0 } : { display: 'block', opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n}) {\n  const collapsed = isCollapsed ? 'collapsed' : '';\n  return (\n    <div className=\"panelBox\">\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={'collapseBox ' + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>{bottomContent}</BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\nimport { Layout } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport CollapseBox from '../CollapseBox';\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({ config, topContent, bottomContent, fixHeaderPanel }) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelClose, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n  const [leftSider, setLeftSider] = useState('-1px');\n  const [opacitySider, setOpacitySider] = useState(0);\n  const [paddingTopSider, setPaddingTopSider] = useState('20px');\n\n  const { state: stateApp, appContextAction } = useAppContext();\n  const { isNavMenuClose } = stateApp;\n  const { navMenu } = appContextAction;\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      setOpacitySider(0);\n      setPaddingTopSider('20px');\n\n      timer = setTimeout(() => {\n        setLeftSider('-1px');\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n      setLeftSider(0);\n      timer = setTimeout(() => {\n        setOpacitySider(1);\n        setPaddingTopSider(0);\n      }, 200);\n      if (!isNavMenuClose) {\n        navMenu.close();\n      }\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isSidePanelClose}\n      collapsedWidth={'0px'}\n      onCollapse={collapsePanel}\n      className=\"sidePanel\"\n      zeroWidthTriggerStyle={{\n        right: '-50px',\n        top: '15px',\n      }}\n      style={{\n        left: leftSider,\n      }}\n    >\n      <div\n        className=\"sidePanelContent\"\n        style={{\n          opacity: opacitySider,\n          paddingTop: paddingTopSider,\n        }}\n      >\n        {fixHeaderPanel}\n        <CollapseBox\n          buttonTitle={ADD_NEW_ENTITY}\n          isCollapsed={isBoxCollapsed}\n          onCollapse={collapsePanelBox}\n          topContent={topContent}\n          bottomContent={bottomContent}\n        ></CollapseBox>\n      </div>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport DefaultLayout from '../DefaultLayout';\n\nimport SidePanel from '@/components/SidePanel';\nimport { Layout } from 'antd';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\n\nconst { Content } = Layout;\n\nconst ContentBox = ({ children }) => {\n  const { state: stateCrud, crudContextAction } = useCrudContext();\n  const { state: stateApp } = useAppContext();\n  const { isPanelClose } = stateCrud;\n  const { isNavMenuClose } = stateApp;\n  const { panel } = crudContextAction;\n\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      timer = setTimeout(() => {\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  useEffect(() => {\n    if (!isNavMenuClose) {\n      panel.close();\n    }\n  }, [isNavMenuClose]);\n  return (\n    <Content\n      className=\"whiteBox shadow\"\n      style={{\n        padding: '50px 40px',\n        margin: '100px auto',\n        width: isSidePanelClose ? '100%' : '830px',\n        maxWidth: '1000px',\n        flex: 'none',\n      }}\n    >\n      {children}\n    </Content>\n  );\n};\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <>\n      <DefaultLayout>\n        <Layout style={{ minHeight: '100vh' }}>\n          <SidePanel\n            config={config}\n            topContent={sidePanelTopContent}\n            bottomContent={sidePanelBottomContent}\n            fixHeaderPanel={fixHeaderPanel}\n          ></SidePanel>\n          <Layout>\n            <ContentBox> {children}</ContentBox>\n          </Layout>\n        </Layout>\n      </DefaultLayout>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { ErpContextProvider } from '@/context/erp';\n\nfunction ErpContextLayout({ children }) {\n  return <ErpContextProvider>{children}</ErpContextProvider>;\n}\n\nexport default ErpContextLayout;\n","import React from 'react';\n\nimport ErpContextLayout from '../ErpContextLayout';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function ErpLayout({ children, config }) {\n  return (\n    <ErpContextLayout>\n      <Layout className=\"site-layout\">\n        <Content\n          className=\"whiteBox shadow\"\n          style={{\n            padding: '50px 40px',\n            margin: '100px auto',\n            width: '100%',\n            maxWidth: '1100px',\n          }}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </ErpContextLayout>\n  );\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <Content\n        style={{\n          padding: '30px 40px',\n          margin: '70px auto',\n          width: '100%',\n          maxWidth: '1100px',\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const isDate = props.isDate || false;\n      let value = valueByString(currentResult, propsKey);\n      value = isDate ? dayjs(value).format('DD/MM/YYYY') : value;\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCreatedItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    console.log('🚀 ~ file: index.jsx ~ line 19 ~ onSubmit ~ fieldsValue', fieldsValue);\n\n    dispatch(crud.create({ entity, jsonData: fieldsValue }));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'create' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectUpdatedItem } from '@/redux/crud/selectors';\n// import { isDate } from '@/utils/helpers';\n// import { selectCurrentItem } from '@/redux/crud/selectors';\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const showCurrentRecord = () => {\n    readBox.open();\n  };\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    console.log('🚀 ~ file: index.jsx ~ line 34 ~ onSubmit ~  current.id', current.id);\n    const id = current.id;\n    dispatch(crud.update({ entity, id, jsonData: fieldsValue }));\n  };\n  useEffect(() => {\n    if (current) {\n      let newValues = { ...current };\n      console.log('somak master: ' + JSON.stringify(newValues));\n      if (newValues.birthday) {\n        newValues = {\n          ...newValues,\n          birthday: dayjs(newValues['birthday']),\n        };\n      }\n      if (newValues.date) {\n        newValues = {\n          ...newValues,\n          date: dayjs(newValues['date']),\n        };\n      }\n      if (newValues.expiredDate) {\n        newValues = {\n          ...newValues,\n          expiredDate: dayjs(newValues['expiredDate']),\n        };\n      }\n      if (newValues.created) {\n        newValues = {\n          ...newValues,\n          created: dayjs(newValues['created']),\n        };\n      }\n      if (newValues.updated) {\n        newValues = {\n          ...newValues,\n          updated: dayjs(newValues['updated']),\n        };\n      }\n      // console.log('🚀 ~ file: index.jsx ~ line 40 ~ useEffect ~ obj', newValues);\n      form.setFieldsValue(newValues);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'update' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingRight: '5px',\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingLeft: '5px',\n            }}\n          >\n            <Button onClick={showCurrentRecord}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectDeletedItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = 'Do you want delete : ',\n    modalTitle = 'Remove Item',\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState('');\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list({ entity }));\n      // dispatch(crud.resetAction({actionType:\"delete\"})); // check here maybe it wrong\n    }\n    if (current) {\n      let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current.id;\n    dispatch(crud.delete({ entity, id }));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDebounce } from 'react-use';\nimport { Select, Empty } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectSearchedItems } from '@/redux/crud/selectors';\nfunction SearchItemComponent({ config, onRerender }) {\n  let { entity, searchConfig, relations = '' } = config;\n  const { displayLabels, searchFields, outputValue = 'id' } = searchConfig;\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n  const isSearching = useRef(false);\n  const [searching, setSearching] = useState(false);\n  const [valToSearch, setValToSearch] = useState('');\n  const [debouncedValue, setDebouncedValue] = useState('');\n\n  const [, cancel] = useDebounce(\n    () => {\n      setDebouncedValue(valToSearch);\n    },\n    500,\n    [valToSearch]\n  );\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n\n  useEffect(() => {\n    if (debouncedValue != '') {\n      const options = {\n        q: debouncedValue,\n        fields: searchFields,\n        relations: relations,\n      };\n      dispatch(crud.search({ entity, options }));\n    }\n    return () => {\n      cancel();\n    };\n  }, [debouncedValue]);\n\n  const onSearch = (searchText) => {\n    if (searchText && searchText != '') {\n      isSearching.current = true;\n      setSearching(true);\n      setOptions([]);\n      setCurrentValue(undefined);\n      setValToSearch(searchText);\n    }\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n    dispatch(crud.currentItem({ data: currentItem }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n    onRerender();\n  };\n  useEffect(() => {\n    if (isSearching.current) {\n      if (isSuccess) {\n        setOptions(result);\n      } else {\n        setSearching(false);\n        setCurrentValue(undefined);\n        setOptions([]);\n      }\n    }\n  }, [isSuccess, result]);\n\n  return (\n    <Select\n      loading={isLoading}\n      showSearch\n      allowClear\n      placeholder={<SearchOutlined style={{ float: 'right', padding: '8px 0' }} />}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      notFoundContent={searching ? '... Searching' : <Empty />}\n      value={currentValue}\n      onSearch={onSearch}\n      style={{ width: '100%' }}\n      onSelect={onSelect}\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option key={optionField[outputValue]} value={optionField[outputValue]}>\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default function SearchItem({ config }) {\n  const [state, setState] = useState([0]);\n\n  const onRerender = () => {\n    setState([state + 1]);\n  };\n\n  return state.map((comp) => (\n    <SearchItemComponent key={comp} config={config} onRerender={onRerender} />\n  ));\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { Dropdown, Button, PageHeader, Table } from 'antd';\n\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectListItems } from '@/redux/crud/selectors';\n\nimport uniqueId from '@/utils/uinqueId';\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, relations = '', dataTableColumns, dataTableTitle } = config;\n\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: '',\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={['click']}>\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    const options = { page: pagination.current || 1, relations: relations };\n    dispatch(crud.list({ entity, options }));\n  }, []);\n\n  useEffect(() => {\n    const options = { page: pagination.current || 1, relations: relations };\n    dispatch(crud.list({ entity, options }));\n    //dispatch(crud.list({ entity }));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: '20px 0px',\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item.id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectItemById } from '@/redux/crud/selectors';\nimport { useCrudContext } from '@/context/crud';\nimport uniqueId from '@/utils/uinqueId';\nimport DataTable from '@/components/DataTable';\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row.id));\n  const Show = () => {\n    dispatch(crud.currentItem({ data: item }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentItem({ data: item }));\n    dispatch(crud.currentAction({ actionType: 'update', data: item }));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction({ actionType: 'delete', data: item }));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return <DataTable config={config} DropDownRowMenu={DropDownRowMenu} AddNewItem={AddNewItem} />;\n}\n","import React, { useLayoutEffect, useEffect, useState } from 'react';\nimport { Row, Col, Button, Divider } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport CreateForm from '@/components/CreateForm';\nimport UpdateForm from '@/components/UpdateForm';\nimport DeleteModal from '@/components/DeleteModal';\nimport ReadItem from '@/components/ReadItem';\nimport SearchItem from '@/components/SearchItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\n\nimport { CrudLayout } from '@/layout';\n\nimport CrudDataTable from './CrudDataTable';\n\nfunction SidePanelTopContent({ config, formElements }) {\n  const { crudContextAction, state } = useCrudContext();\n  const { entityDisplayLabels } = config;\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const { isReadBoxOpen, isEditBoxOpen } = state;\n  const { result: currentItem } = useSelector(selectCurrentItem);\n  const dispatch = useDispatch();\n\n  const [labels, setLabels] = useState('');\n  useEffect(() => {\n    if (currentItem) {\n      const currentlabels = entityDisplayLabels.map((x) => currentItem[x]).join(' ');\n\n      setLabels(currentlabels);\n    }\n  }, [currentItem]);\n\n  const removeItem = () => {\n    dispatch(crud.currentAction({ actionType: 'delete', data: currentItem }));\n    modal.open();\n  };\n  const editItem = () => {\n    dispatch(crud.currentAction({ actionType: 'update', data: currentItem }));\n    editBox.open();\n  };\n\n  const show = isReadBoxOpen || isEditBoxOpen ? { opacity: 1 } : { opacity: 0 };\n  return (\n    <>\n      <Row style={show}>\n        <Col span={13}>\n          <p style={{ marginBottom: '10px' }}>{labels}</p>\n        </Col>\n        <Col span={11}>\n          <Button\n            onClick={removeItem}\n            type=\"text\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '5px' }}\n          >\n            remove\n          </Button>\n          <Button\n            onClick={editItem}\n            type=\"text\"\n            icon={<EditOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '0px' }}\n          >\n            edit\n          </Button>\n        </Col>\n\n        <Col span={24}>\n          <div className=\"line\"></div>\n        </Col>\n        <div className=\"space10\"></div>\n      </Row>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>{config.PANEL_TITLE}</h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button onClick={addNewItem} block={true} icon={<PlusOutlined />}></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction CrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={<CreateForm config={config} formElements={createForm} />}\n      sidePanelTopContent={<SidePanelTopContent config={config} formElements={updateForm} />}\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default CrudModule;\n"],"sourceRoot":""}