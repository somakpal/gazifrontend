{"version":3,"sources":["modules/ProductModule/DataTable.jsx","modules/ProductModule/DataTableDropMenu.jsx","modules/ProductModule/index.jsx","pages/Product.jsx","context/erp/types.jsx","context/erp/reducer.jsx","context/erp/actions.jsx","context/erp/selectors.jsx","context/erp/index.jsx","redux/erp/actions.js","redux/erp/selectors.js","request/request.js","components/CustomAntd/DatePicker.jsx","components/CustomAntd/Calendar.jsx","components/CustomAntd/TimePicker.jsx","redux/settings/selectors.js","settings/useMoney.jsx","hooks/useOnFetch/index.jsx","components/AutoCompleteAsync/index.jsx"],"names":["DataTable","totalqty","averagerate","totalamount","config","entity","dataTableColumns","dataTableTitle","money","useMoney","useSelector","selectListItems","listResult","result","listIsLoading","isLoading","items","pagination","length","pop","totamt","totqty","console","log","dispatch","useDispatch","handelDataTableLoad","useCallback","options","page","current","erp","list","useEffect","style","position","width","float","gutter","span","title","ghost","extra","padding","columns","rowKey","item","id","dataSource","loading","onChange","className","paddingLeft","paddingTop","readOnly","value","min","controls","addonAfter","currencyPosition","currencySymbol","undefined","addonBefore","formatter","amountFormatter","amount","offset","Content","Layout","DataTableDropMenu","margin","maxWidth","SaleModule","useErpContext","state","useLayoutEffect","resetState","Product","match","ENTITY_NAME","ADD_NEW_ENTITY","DATATABLE_TITLE","dataIndex","OPEN_MODAL","CLOSE_MODAL","OPEN_PANEL","CLOSE_PANEL","initialState","create","isOpen","update","read","recordPayment","deleteModal","dataTableList","last","contextReducer","action","keyState","type","actionTypes","Error","contextActions","modal","open","close","readPanel","updatePanel","createPanel","recordPanel","contextSelectors","isModalOpen","isPanelOpen","isBoxOpen","ErpContext","createContext","ErpContextProvider","children","useReducer","useMemo","Provider","context","useContext","erpContextAction","erpContextSelector","a","resetAction","actionType","payload","currentItem","data","currentAction","request","success","parseInt","pageSize","total","count","jsonData","invoice","delete","search","selectErp","selectCurrentItem","createSelector","selectItemById","itemId","find","selectCreatedItem","selectUpdatedItem","selectRecordPaymentItem","selectDeletedItem","selectSearchedItems","axios","defaults","baseURL","API_BASE_URL","withCredentials","post","response","successHandler","notifyOnSuccess","notifyOnFailed","errorHandler","get","patch","filter","equal","query","key","slice","source","CancelToken","DatePicker","generatePicker","dayjsGenerateConfig","generateCalendar","TimePicker","React","props","ref","picker","mode","displayName","selectSettings","settings","decimalSep","ThousandSep","centPrecision","zeroFormat","currencyFormat","currency","dollars","separator","decimal","symbol","precision","format","moneyFormatter","moneyRowFormatter","textAlign","whiteSpace","useOnFetch","useState","setResult","isSuccess","setIsSuccess","setIsLoading","onFetch","fetchingFn","AutoCompleteAsync","displayLabels","searchFields","outputValue","selectOptions","setOptions","currentValue","setCurrentValue","isUpdating","useRef","isSearching","searching","setSearching","valToSearch","setValToSearch","debouncedValue","setDebouncedValue","useDebounce","cancel","labels","optionField","map","x","join","q","fields","asyncSearch","showSearch","placeholder","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","onSearch","searchText","newValue","index","onClear","e","marginRight","allowClear","Option"],"mappings":"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","file":"static/js/Product.8388a9eb.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { Dropdown, Button, PageHeader, Table, Row, Col, Space, Form, InputNumber, Select } from 'antd';\nimport { DatePicker } from '@/components/CustomAntd';\nimport AutoCompleteAsync from '@/components/AutoCompleteAsync';\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { erp } from '@/redux/erp/actions';\nimport { selectListItems } from '@/redux/erp/selectors';\nimport { useMoney } from '@/settings';\n\nexport default function DataTable({ config, }) {\n    let totalqty, averagerate, totalamount;\n    let { entity, dataTableColumns, dataTableTitle } = config;\n    const money = useMoney();\n    const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\n    const { pagination, items } = listResult;\n    \n    if(items.length == 11){\n        // const { totqty } = items[8]; \n        // totalqty = totqty;\n        averagerate = items.pop();\n        const { totamt } = items.pop();\n        const { totqty } = items.pop();\n        totalqty = totqty; totalamount = totamt;\n    }\n    const productitems = items;\n    console.log('somak darun korechis: ',items.length, items);\n    // console.log('somak darun :', totalqty, totalamount, averagerate);\n\n    const dispatch = useDispatch();\n\n    const handelDataTableLoad = useCallback((pagination) => {\n        const options = { page: pagination.current || 1, };\n        dispatch(erp.list({ entity, options }));\n    }, []);\n\n    useEffect(() => {\n        const options = { page: 1, };\n        dispatch(erp.list({ entity, options }));\n    }, []);\n\n    return (\n        <>\n            <div style={{ position: 'relative', width: ' 100%', float: 'right' }}>\n                <Row gutter={[12, -5]}>\n                    <Col span={5}><PageHeader title={dataTableTitle} ghost={false} extra={[]} style={{ padding: '20px 0px', }}></PageHeader></Col>\n                </Row>\n            </div>\n\n            <Table\n                columns={dataTableColumns}\n                rowKey={(item) => item.id}\n                dataSource={items}\n                pagination={false}\n                loading={listIsLoading}\n                onChange={handelDataTableLoad}\n            />\n\n            <div style={{ position: 'relative', width: ' 100%', float: 'right' }}>\n                <Row gutter={[12, -5]}>\n                    <Col span={24}>\n                        <div className=\"line\"></div>\n                    </Col>\n                    <div className=\"space10\"></div>\n                    <Col className=\"gutter-row\" span={6}>\n                        <p\n                            style={{\n                                paddingLeft: '1px',\n                                paddingTop: '5px',\n                            }}\n                        >\n                            Total Qty :\n                        </p>\n                        <InputNumber\n                            readOnly\n                            className=\"moneyInput\"\n                            value={totalqty}\n                            min={0}\n                            controls={false}\n                            addonAfter={money.currencyPosition === 'after' ? money.currencySymbol : undefined}\n                            addonBefore={money.currencyPosition === 'before' ? money.currencySymbol : undefined}\n                            formatter={(value) => money.amountFormatter({ amount: value })}\n                        />\n                    </Col>\n                    <Col className=\"gutter-row\" span={6}>\n                        <p\n                            style={{\n                                paddingLeft: '1px',\n                                paddingTop: '5px',\n                            }}\n                        >\n                            Total Amount :\n                        </p>\n                        <InputNumber\n                            readOnly\n                            className=\"moneyInput\"\n                            value={totalamount}\n                            min={0}\n                            controls={false}\n                            addonAfter={money.currencyPosition === 'after' ? money.currencySymbol : undefined}\n                            addonBefore={money.currencyPosition === 'before' ? money.currencySymbol : undefined}\n                            formatter={(value) => money.amountFormatter({ amount: value })}\n                        />\n                    </Col>\n                    <Col className=\"gutter-row\" span={6} offset={0}>\n                        <p\n                            style={{\n                                paddingLeft: '1px',\n                                paddingTop: '5px',\n                            }}\n                        >\n                            Avg Rate :\n                        </p>\n                        <InputNumber\n                            readOnly\n                            className=\"moneyInput\"\n                            value={averagerate}\n                            min={0}\n                            controls={false}\n                            addonAfter={money.currencyPosition === 'after' ? money.currencySymbol : undefined}\n                            addonBefore={money.currencyPosition === 'before' ? money.currencySymbol : undefined}\n                            formatter={(value) => money.amountFormatter({ amount: value })}\n                        />\n                    </Col>\n                </Row>\n            </div>\n\n        </>\n    );\n}","import React from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { Button, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, DeleteOutlined, FilePdfOutlined, CreditCardOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { erp } from '@/redux/erp/actions';\nimport { selectListItems, selectItemById } from '@/redux/erp/selectors';\nimport uniqueId from '@/utils/uinqueId';\nimport DataTable from '@/modules/ProductModule/DataTable';\nimport { useErpContext } from '@/context/erp';\nimport { Layout } from 'antd';\nconst { Content } = Layout;\n\nexport default function DataTableDropMenu({ config }) {  \n  return (\n    <>\n      <Layout className=\"site-layout\">\n        <Content className=\"whiteBox shadow\" style={{ padding: '50px 40px', margin: '100px auto', width: '100%', maxWidth: '1100px' }} >\n          <DataTable config={config} />\n        </Content>\n      </Layout>\n    </>\n  );\n}\n","import React, { useLayoutEffect } from 'react';\nimport DataTableDropMenu from '@/modules/ProductModule/DataTableDropMenu';\n// import Delete from '@/modules/SaleModule/DeleteItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useErpContext } from '@/context/erp';\nimport { erp } from '@/redux/erp/actions';\n\nexport default function SaleModule({ config }) {  \n  const dispatch = useDispatch();\n  const { state } = useErpContext();\n\n  useLayoutEffect(() => {\n    dispatch(erp.resetState());\n  }, []);\n\n  return (\n    <>      \n      <DataTableDropMenu config={config} />      \n    </>\n  );\n}\n\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { ErpContextProvider } from '@/context/erp';\nimport ProductModule from '@/modules/ProductModule';\n// import SaleForm from '@/modules/SaleModule/SaleForm';\n\nexport default function Product({ match }) {\n    // const mode = match.params.mode ? match.params.mode : 'read';\n    const entity = 'product';\n    // const relations = '';\n    const dataTableTitle = 'Products';\n    // const entityDisplayLabels = ['date', 'product.name', 'chlnNo', 'unit', 'qtyPieces', 'amount'];\n\n    const dataTableColumns = [        \n        { title: 'Name', dataIndex: 'name' },\n        { title: \"Sale Qty\", dataIndex: 'saleQty' },\n        { title: 'Amount', dataIndex: 'saleAmt' },\n        { title: 'Rate', dataIndex: 'avgRate' },        \n    ];\n    const ADD_NEW_ENTITY = 'Add';\n    const DATATABLE_TITLE = 'Products List';\n    const ENTITY_NAME = 'Product';\n    // const CREATE_ENTITY = 'Create Product';\n    // const UPDATE_ENTITY = 'Update Product';\n\n    const config = {\n        entity,        \n        dataTableTitle,        \n        ENTITY_NAME,        \n        ADD_NEW_ENTITY,        \n        DATATABLE_TITLE,\n        dataTableColumns,        \n    };\n\n    return (\n        <ErpContextProvider>\n            <ProductModule config={config} />\n        </ErpContextProvider>\n    );\n    \n}\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  recordPayment: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  dataTableList: {\n    isOpen: true,\n  },\n  last: null,\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        dataTableList: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'read' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'update' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'create' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    recordPanel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL,\n          keyState: 'recordPayment',\n        });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error('useErpContext must be used within a ErpContextProvider');\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import * as actionTypes from './types';\nimport { request } from '@/request';\n\nexport const erp = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction:\n    ({ actionType }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.RESET_ACTION,\n          keyState: actionType,\n          payload: null,\n        });\n      },\n  currentItem:\n    ({ data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: { ...data },\n        });\n      },\n  currentAction:\n    ({ actionType, data }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.CURRENT_ACTION,\n          keyState: actionType,\n          payload: { ...data },\n        });\n      },\n  list:\n    ({ entity, options = { page: 1 } }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'list',\n          payload: null,\n        });\n\n        let data = await request.list({ entity, options });\n\n        if (data.success === true) {\n          const result = {\n            items: data.result,\n            pagination: {\n              current: parseInt(data.pagination.page, 10),\n              pageSize: 10,\n              total: parseInt(data.pagination.count, 10),\n            },\n          };\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'list',\n            payload: result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'list',\n            payload: null,\n          });\n        }\n      },\n  create:\n    ({ entity, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'create',\n          payload: null,\n        });\n        console.log('jsonData action redux', jsonData);\n        let data = await request.create({ entity, jsonData });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'create',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'create',\n            payload: null,\n          });\n        }\n      },\n  recordPayment:\n    ({ entity, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'recordPayment',\n          payload: null,\n        });\n\n        let data = await request.create({ entity, jsonData });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'recordPayment',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result.invoice,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'recordPayment',\n            payload: null,\n          });\n        }\n      },\n  read:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'read',\n          payload: null,\n        });\n\n        let data = await request.read({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'read',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'read',\n            payload: null,\n          });\n        }\n      },\n  update:\n    ({ entity, id, jsonData }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'update',\n          payload: null,\n        });\n\n        let data = await request.update({ entity, id, jsonData });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'update',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'update',\n            payload: null,\n          });\n        }\n      },\n\n  delete:\n    ({ entity, id }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'delete',\n          payload: null,\n        });\n\n        let data = await request.delete({ entity, id });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'delete',\n            payload: data.result,\n          });\n          dispatch({\n            type: actionTypes.CURRENT_ITEM,\n            payload: null,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'delete',\n            payload: null,\n          });\n        }\n      },\n\n  search:\n    ({ entity, options }) =>\n      async (dispatch) => {\n        dispatch({\n          type: actionTypes.REQUEST_LOADING,\n          keyState: 'search',\n          payload: null,\n        });\n\n        let data = await request.search({ entity, options });\n\n        if (data.success === true) {\n          dispatch({\n            type: actionTypes.REQUEST_SUCCESS,\n            keyState: 'search',\n            payload: data.result,\n          });\n        } else {\n          dispatch({\n            type: actionTypes.REQUEST_FAILED,\n            keyState: 'search',\n            payload: null,\n          });\n        }\n      },\n};\n","import { createSelector } from 'reselect';\n\nconst selectErp = (state) => state.erp;\n\nexport const selectCurrentItem = createSelector([selectErp], (erp) => erp.current);\n\nexport const selectListItems = createSelector([selectErp], (erp) => erp.list);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) => list.result.items.find((item) => item.id === itemId));\n\nexport const selectCreatedItem = createSelector([selectErp], (erp) => erp.create);\n\nexport const selectUpdatedItem = createSelector([selectErp], (erp) => erp.update);\n\nexport const selectRecordPaymentItem = createSelector([selectErp], (erp) => erp.recordPayment);\n\nexport const selectReadItem = createSelector([selectErp], (erp) => erp.read);\n\nexport const selectDeletedItem = createSelector([selectErp], (erp) => erp.delete);\n\nexport const selectSearchedItems = createSelector([selectErp], (erp) => erp.search);\n","import axios from 'axios';\nimport { API_BASE_URL } from '@/config/serverApiConfig';\n\nimport errorHandler from './errorHandler';\nimport successHandler from './successHandler';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nconst request = {\n  create: async ({ entity, jsonData }) => {\n    console.log('🚀 Create Request 🚀 ~ file: request.js ~ line 19 ~ create: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.post(entity + '/create', jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async ({ entity, id }) => {\n    try {\n      const response = await axios.get(entity + '/read/' + id);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async ({ entity, id, jsonData }) => {\n    console.log('🚀 ~ file: request.js ~ line 34 ~ update: ~ id', id);\n    console.log('🚀 Update Request 🚀 ~ file: request.js ~ line 42 ~ update: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.patch(entity + '/update/' + id, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async ({ entity, id, options = {} }) => {\n    try {\n      const response = await axios.delete(entity + '/delete/' + id);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async ({ entity, options = {} }) => {\n    try {\n      let filter = options.filter ? 'filter=' + options.filter : '';\n      let equal = options.equal ? '&equal=' + options.equal : '';\n      let query = `?${filter}${equal}`;\n\n      const response = await axios.get(entity + '/filter' + query);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n      // headersInstance.cancelToken = source.token;\n      //console.log('somak bhai- ' + query);\n      const response = await axios.get(entity + '/search' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n\n      const response = await axios.get(entity + '/list' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async ({ entity, jsonData, options = {} }) => {\n    try {\n      const response = await axios.post(entity, jsonData);\n\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async ({ entity }) => {\n    try {\n      const response = await axios.get(entity);\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async ({ entity, jsonData }) => {\n    try {\n      const response = await axios.patch(entity, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  source: () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/lib/date-picker/generatePicker';\n//import generatePicker from \"antd/es/date-picker/generatePicker\";\nimport 'antd/lib/date-picker/style/index';\n\nconst DatePicker = generatePicker(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generateCalendar from 'antd/lib/calendar/generateCalendar';\nimport 'antd/lib/calendar/style';\n\nconst Calendar = generateCalendar(dayjsGenerateConfig);\n\nexport default Calendar;\n","import * as React from 'react';\nimport DatePicker from './DatePicker';\n\nconst TimePicker = React.forwardRef((props, ref) => {\n  return <DatePicker {...props} picker=\"time\" mode={undefined} ref={ref} />;\n});\n\nTimePicker.displayName = 'TimePicker';\n\nexport default TimePicker;\n","import { createSelector } from 'reselect';\n\nexport const selectSettings = (state) => state.settings;\n\nexport const selectCurrency = createSelector(\n  [selectSettings],\n  (settings) => settings.currencySymbol\n);\n\nexport const selectCurrencyPosition = createSelector(\n  [selectSettings],\n  (settings) => settings.currencyPosition\n);\n","import React from 'react';\nimport currency from 'currency.js';\nimport { useSelector } from 'react-redux';\n\nimport { selectSettings } from '@/redux/settings/selectors';\n\nconst useMoney = () => {\n  const { currencySymbol, currencyPosition, decimalSep, ThousandSep, centPrecision, zeroFormat } =\n    useSelector(selectSettings);\n\n  const currencyFormat = (amount) =>\n    currency(amount).dollars() > 0 || !zeroFormat\n      ? currency(amount, {\n          separator: ThousandSep,\n          decimal: decimalSep,\n          symbol: '',\n          precision: centPrecision,\n        }).format()\n      : 0 +\n        currency(amount, {\n          separator: ThousandSep,\n          decimal: decimalSep,\n          symbol: '',\n          precision: centPrecision,\n        }).format();\n\n  let moneyFormatter = ({ amount = 0 }) => {\n    console.log('🚀 ~ file: useMoney.jsx ~ line 28 ~ moneyFormatter ~ amount', amount);\n\n    return currencyPosition === 'before'\n      ? currencySymbol + ' ' + currencyFormat(amount)\n      : currencyFormat(amount) + ' ' + currencySymbol;\n  };\n\n  let amountFormatter = ({ amount = 0 }) => currencyFormat(amount);\n\n  let moneyRowFormatter = ({ amount = 0 }) => {\n    return {\n      props: {\n        style: {\n          textAlign: 'right',\n          whiteSpace: 'nowrap',\n        },\n      },\n      children: <>{moneyFormatter({ amount })}</>,\n    };\n  };\n\n  return {\n    moneyRowFormatter,\n    moneyFormatter,\n    amountFormatter,\n    currencySymbol,\n    currencyPosition,\n    decimalSep,\n    ThousandSep,\n    centPrecision,\n    zeroFormat,\n  };\n};\n\nexport default useMoney;\n","import { useState } from 'react';\n\nexport default function useOnFetch() {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let onFetch = async (fetchingFn) => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    setResult(data.result);\n    if (data.success === true) {\n      setIsSuccess(true);\n    } else {\n      setIsSuccess(false);\n    }\n\n    setIsLoading(false);\n  };\n\n  return { onFetch, result, isSuccess, isLoading };\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { request } from '@/request';\nimport useOnFetch from '@/hooks/useOnFetch';\nimport { useDebounce } from 'react-use';\nimport { Select } from 'antd';\n\nexport default function AutoCompleteAsync({\n  entity,\n  displayLabels,\n  searchFields,\n  outputValue = 'id',\n  value, /// this is for update\n  onChange, /// this is for update    \n}) {\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n  const isUpdating = useRef(true);\n  const isSearching = useRef(false);\n  const [searching, setSearching] = useState(false);\n  const [valToSearch, setValToSearch] = useState('');\n  const [debouncedValue, setDebouncedValue] = useState('');\n\n  const [, cancel] = useDebounce(\n    () => {\n      //  setState(\"Typing stopped\");\n      setDebouncedValue(valToSearch);\n    },\n    500,\n    [valToSearch]\n  );\n\n  const asyncSearch = (options) => {\n    return request.search({ entity, options });\n  };\n\n  let { onFetch, result, isSuccess, isLoading } = useOnFetch();\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n\n  useEffect(() => {\n    if (debouncedValue != '') {\n      const options = {\n        q: debouncedValue,\n        fields: searchFields,\n      };\n      onFetch(() => asyncSearch(options));\n    }\n    return () => {\n      cancel();\n    };\n  }, [debouncedValue]);\n\n  const onSearch = (searchText) => {\n    if (searchText && searchText != '') {\n      isSearching.current = true;\n      setSearching(true);\n      setOptions([]);\n      setCurrentValue(undefined);\n      setValToSearch(searchText);\n    }\n  };\n\n  useEffect(() => {\n    if (isSearching.current) {\n      if (isSuccess) {\n        setOptions(result);\n      } else {\n        setSearching(false);\n        setCurrentValue(undefined);\n        setOptions([]);\n      }\n    }\n  }, [isSuccess, result]);\n\n  useEffect(() => {\n    // this for update Form , it's for setField\n    if (value && isUpdating.current) {\n      if (!isSearching.current) {\n        setOptions([value]);\n      }\n      setCurrentValue(value[outputValue] || value); // set nested value or value \n      onChange(value[outputValue] || value);\n      isUpdating.current = false;\n    }\n  }, [value]);\n\n  return (\n    <Select\n      loading={isLoading}\n      showSearch\n      placeholder={'Search Here'}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      notFoundContent={searching ? '... Searching' : 'Not Found'}\n      value={currentValue}\n      onSearch={onSearch}\n      onChange={(newValue, index) => {\n        if (onChange && newValue != undefined) {\n          onChange(newValue[outputValue] || newValue, index);\n          //setDisplayVal(index.children);\n        }\n      }}\n      onClear={(e) => {\n        setCurrentValue(undefined);\n        setOptions([]);\n        onChange('');\n      }}\n      style={{ width: '100%', marginRight: '1rem' }}\n      allowClear\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option\n          key={optionField[outputValue] || optionField}\n          value={optionField[outputValue] || optionField}\n        >\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n"],"sourceRoot":""}